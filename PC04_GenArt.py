#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""

author: Kevin Ecke
"""

# This generative piece features a randomized color palette for the circles
# and each side of the inner rotating squares in the center.
# I've also added a machine/computer signature (sig) to the lower right hand corner
# as though each new piece is generated by a new and unique computer "Avatar".
# I added an adaptation of Ryan's pseudocode as a background for my initial shape
# for the Grad student extra credit element of the assignment.

import random, turtle
# Psuedocode Change: I didn't realize I needed to change colormode to 255
turtle.colormode(255)

turtle.screensize(1000, 1000, "white")

main = turtle.Turtle()
sig = turtle.Turtle()
main.speed(0) # Added so I didn't have to wait...

# Built/adapted from Ryan Dennie's Pseudocode
check = turtle.Turtle()
check.speed(0)
check.penup()
check.goto(-600, -300)
x, y = check.pos()
for i in range(14):
    check.goto(x, y)
    for j in range(20):
        check.begin_fill()
        check.fillcolor((random.randint(0, 255), random.randint(0, 255), random.randint(0, 255)))
        check.forward(50)
        check.pendown()
        for k in range(4):
            check.forward(50)
            check.right(90)
        check.end_fill()
    y += 50
    check.penup()

# Pseudocode changes: I didn't realize I needed six total random ints for each color in the pseudocode,
# and I added the fills because I felt it would be more interesting.
for i in range(50):
    main.color((random.randint(0, 255), random.randint(0, 255), random.randint(0, 255)), (random.randint(0, 255), random.randint(0, 255), random.randint(0, 255)))
    main.begin_fill()
    main.circle(75)
    main.end_fill()
    for a in range(3):
        main.right(90)
        main.color((random.randint(0, 255), random.randint(0, 255), random.randint(0, 255)), (random.randint(0, 255), random.randint(0, 255), random.randint(0, 255)))
        main.forward(100)
    main.right(1)
main.hideturtle()
    
# Pseudocode changes: I forgot penup(), pendown(), and hideturtle(). I added a pensize() change
# to mirror a signature better, and I added more random marks to make it look
# more like a signature through some experimentation. 
sig.penup()
sig.pensize(10)
sig.goto(200,-200)
sig.pendown()
sig.forward(random.randint(1,90))
sig.right(random.randint(45,90))
sig.forward(random.randint(1,90))
sig.left(random.randint(45,90))
sig.backward(random.randint(1,90))
sig.forward(random.randint(1,90))
sig.left(random.randint(45,90))
sig.forward(random.randint(1,90))
sig.left(random.randint(45,90))
sig.backward(random.randint(1,90))
sig.hideturtle()



turtle.done()